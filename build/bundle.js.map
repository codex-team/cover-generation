{"version":3,"sources":["webpack:///webpack/bootstrap aac89a8c01f76bac1359","webpack:///./src/dom.js","webpack:///./src/main.js","webpack:///./src/styles/main.css","webpack:///./src/ui.js","webpack:///./src/canvas.js","webpack:///./src/toolbar.js"],"names":["Dom","tagName","classNames","attributes","el","document","createElement","Array","isArray","classList","add","attrName","tag","param","n","createElementNS","p","setAttributeNS","module","exports","require","ui","Canvas","default","Toolbar","init","initParams","console","assert","containerId","container","getElementById","warn","canvasInstance","toolbarInstance","nodes","create","destroy","$","CSS","editor","controls","resizeButton","resizeButtonActive","resizeButtonSquare","resizeButtonVertical","resizeButtonHorisontal","controlButton","headline","mainText","image","controlButtonSave","canvasWrapper","canvas","canvasActive","instances","toolbar","currentText","mainRectangle","resizeSqure","resizeVertical","resizeHorisontal","saveButton","pictureButton","mainTextButton","headlineButton","currentCanvasEditing","i","canvasClicked","remove","hide","saveButtonClicked","import","resizeButtonClicked","event","button","target","size","dataset","forEach","header","setCanvasFormat","toggleObjectClicked","object","element","addEventListener","e","openNear","parentNode","click","bindEvents","make","textContent","buttonName","appendChild","properties","tree","svg","elements","text","formats","vertical","width","height","horisontal","square","positions","x","undefined","y","types","padding","rectangle","fill","setSize","format","type","children","setAttribute","clientWidth","clientHeight","offsetWidth","offsetHeight","color","style","fontSize","setPosition","alignment","coords","canvasSizes","elementSizes","isText","textAlign","position","innerHTML","display","window","Element","createText","createImage","serializer","XMLSerializer","source","serializeToString","match","replace","link","encodeURIComponent","body","removeChild","small","medium","big","buttons","left","center","right","colorForm","hidden","colorMode","normal","active","fontSizes","action","buttonClicked","insertBefore","changeFontSize","changeAlignment","changeColorMode","current","setFontSize","moveToTarget","setColor","background","contains","changeColor","value","offsetLeft","top","offsetTop","Number","getAttribute","getTargetParams","removeTargetParams"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap aac89a8c01f76bac1359","/**\n * DOM elements manipulations\n */\nexport default class Dom {\n\n    /**\n    * Helper for making Elements with classname and attributes\n    * @param  {string} tagName           - new Element tag name\n    * @param  {array|string} classNames  - list or name of CSS classname(s)\n    * @param  {Object} attributes        - any attributes\n    * @return {Element}\n    */\n    static make(tagName, classNames, attributes) {\n\n        var el = document.createElement(tagName);\n\n        if ( Array.isArray(classNames) ) {\n\n            el.classList.add(...classNames);\n\n        } else if( classNames ) {\n\n            el.classList.add(classNames);\n\n        }\n\n        for (let attrName in attributes) {\n\n            el[attrName] = attributes[attrName];\n\n        }\n        return el;\n\n    }\n\n\n    /**\n    * Creates SVG element\n    *\n    * @param {string} tag - element tag name\n    * @param {object} param - parametrs\n    *\n    * @returns {Element} new created svg tag\n    */\n    static svg(tag, param) {\n\n        var n = document.createElementNS('http://www.w3.org/2000/svg', tag);\n\n        for (var p in param) {\n\n            n.setAttributeNS(null, p, param[p]);\n\n        }\n\n        return n;\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/dom.js","/**\n * Cover module entry poit\n */\nmodule.exports = function () {\n\n    'use strict';\n\n    /**\n     * Requre CSS\n     */\n    require('./styles/main.css');\n\n    /**\n     * User Interface module\n     */\n    let ui = require('./ui');\n\n    /**\n     * Canvas module\n     * @type {Canvas}\n     */\n    let Canvas = require('./canvas').default,\n        Toolbar = require('./toolbar').default;\n\n    /**\n     * Initialization method\n     * @param  {object} initParams\n     * @param  {string} initParams.containerId - in that Node we will render Editor\n     */\n    let init = function (initParams = {}) {\n\n        console.assert(initParams.containerId, 'Container id is missed');\n\n        let container = document.getElementById(initParams.containerId);\n\n        if (!container) {\n\n            console.warn('Container was not found by id %o', initParams.containerId);\n            return;\n\n        }\n\n        let canvasInstance = new Canvas(),\n            toolbarInstance = new Toolbar();\n\n        /**\n         * Make interface and bind events\n         */\n        let nodes = ui.create(container, canvasInstance, toolbarInstance);\n\n    };\n\n    /**\n     * Destories UI\n     */\n    let destroy = function () {\n\n    };\n\n    return {\n        init,\n        destroy\n    };\n\n}();\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/main.css\n// module id = 2\n// module chunks = 0","/**\n * User interface module\n */\nmodule.exports = function () {\n\n    'use strict';\n\n    let $ = require('./dom').default;\n\n    /**\n     * Style classnames\n     * @type {Object}\n     */\n    const CSS = {\n        editor                 : 'cover-editor',\n        controls               : 'cover-editor__controls',\n\n        resizeButton           : 'cover-editor__resize-canvas',\n        resizeButtonActive     : 'cover-editor__resize-canvas--active',\n\n        resizeButtonSquare     : 'cover-editor__resize-canvas--square',\n        resizeButtonVertical   : 'cover-editor__resize-canvas--vertical',\n        resizeButtonHorisontal : 'cover-editor__resize-canvas--horisontal',\n\n        controlButton          : 'cover-editor__control-button',\n        headline               : 'cover-editor__control-button--headline',\n        mainText               : 'cover-editor__control-button--main-text',\n        image                  : 'cover-editor__control-button--image',\n        controlButtonSave      : 'cover-editor__control-button--save',\n\n        canvasWrapper          : 'cover-editor__canvas-wrapper',\n        canvas                 : 'cover-editor__canvas',\n        canvasActive           : 'cover-editor__canvas-wrapper--active'\n    };\n\n    /**\n     * Static instances\n     * @type {Object}\n     */\n    const instances = {\n        canvas       : null,\n        toolbar      : null\n    };\n\n    /**\n     * Static nodes cache\n     * @type {Object}\n     */\n    let nodes = {\n        currentText          : null,\n        canvasWrapper        : null,\n        canvas               : null,\n        mainRectangle        : null,\n        controls : {\n            resizeSqure      : null,\n            resizeVertical   : null,\n            resizeHorisontal : null,\n            saveButton       : null,\n            pictureButton    : null,\n            mainTextButton   : null,\n            headlineButton   : null,\n        },\n        currentCanvasEditing : null\n    };\n\n    /**\n     * Counter in function canvasClicked\n     */\n    let i = 0;\n\n    /**\n     * Make canvas active\n     */\n    function canvasClicked() {\n\n        if (i % 2 == 0) {\n\n            nodes.canvasWrapper.classList.add(CSS.canvasActive);\n            i++;\n\n        } else {\n\n            nodes.canvasWrapper.classList.remove(CSS.canvasActive);\n            i--;\n\n        }\n\n        instances.toolbar.hide();\n\n    }\n\n    /**\n     * Save button click listener\n     */\n    function saveButtonClicked() {\n\n        instances.canvas.import();\n\n    }\n\n    /**\n     * Resize button click listener\n     * @param {MouseEvent} event — click\n     */\n    function resizeButtonClicked(event) {\n\n        let button = event.target,\n            size = button.dataset.size;\n\n        ['resizeSqure', 'resizeVertical', 'resizeHorisontal'].forEach( header => {\n\n            nodes.controls[header].classList.remove(CSS.resizeButtonActive);\n\n        });\n\n        event.target.classList.add(CSS.resizeButtonActive);\n        instances.canvas.setCanvasFormat(size);\n\n    }\n\n    /**\n     * Show and hide button click listener\n     * @param  {MouseEvent} event  - click\n     */\n    function toggleObjectClicked(event) {\n\n        let button = event.target,\n            object = button.dataset.object,\n            element = instances.canvas.createElement(object);\n\n        element.addEventListener('click', (e) => {\n\n            if (e.target.tagName === 'DIV') {\n\n                instances.toolbar.openNear({target: e.target.parentNode});\n                return;\n\n            }\n\n            instances.toolbar.openNear({target: e.target});\n\n        });\n        element.click();\n\n    }\n\n    /**\n     * Bind necessary event to manupulate controls\n     */\n    function bindEvents() {\n\n        nodes.canvasWrapper.addEventListener('click', canvasClicked);\n\n        nodes.controls.saveButton.addEventListener('click', saveButtonClicked);\n\n        nodes.controls.resizeSqure.addEventListener('click', resizeButtonClicked);\n        nodes.controls.resizeVertical.addEventListener('click', resizeButtonClicked);\n        nodes.controls.resizeHorisontal.addEventListener('click', resizeButtonClicked);\n\n        nodes.controls.pictureButton.addEventListener('click', toggleObjectClicked);\n        nodes.controls.mainTextButton.addEventListener('click', toggleObjectClicked);\n        nodes.controls.headlineButton.addEventListener('click', toggleObjectClicked);\n\n    }\n\n    /**\n    * Create cover-editor\n    * @param {object} settings - array of paramertres\n    * @param {Element} settings.container - element to create cover-editor\n    */\n    function create(container, canvasInstance, toolbarInstance) {\n\n        var editor   = $.make('div', CSS.editor),\n            controls = $.make('div', CSS.controls);\n\n\n        instances.canvas                = canvasInstance;\n        instances.toolbar               = toolbarInstance;\n\n        nodes.canvasWrapper             = $.make('div', CSS.canvasWrapper);\n        nodes.canvas                    = instances.canvas.create(nodes.canvasWrapper);\n        nodes.controls.resizeSqure      = $.make('span', [CSS.resizeButton, CSS.resizeButtonSquare]);\n        nodes.controls.resizeVertical   = $.make('span', [CSS.resizeButton, CSS.resizeButtonVertical]);\n        nodes.controls.resizeHorisontal = $.make('span', [CSS.resizeButton, CSS.resizeButtonHorisontal]);\n        nodes.controls.saveButton       = $.make('span', [CSS.controlButton, CSS.controlButtonSave]);\n        nodes.controls.pictureButton    = $.make('span', [CSS.controlButton, CSS.image], { textContent: 'Image' });\n        nodes.controls.mainTextButton   = $.make('span', [CSS.controlButton, CSS.mainText], { textContent: 'Main Text' });\n        nodes.controls.headlineButton   = $.make('span', [CSS.controlButton, CSS.headline], { textContent: 'Headline' });\n\n        /**\n         * Save size in button's data-size\n         */\n        nodes.controls.resizeSqure.dataset.size = 'square';\n        nodes.controls.resizeVertical.dataset.size = 'vertical';\n        nodes.controls.resizeHorisontal.dataset.size = 'horisontal';\n        nodes.controls.resizeHorisontal.classList.add(CSS.resizeButtonActive);\n\n        /**\n         * Save create element type in button's data-object\n         */\n        nodes.controls.mainTextButton.dataset.object = 'mainText';\n        nodes.controls.headlineButton.dataset.object = 'headline';\n        nodes.controls.pictureButton.dataset.object = 'picture';\n\n        for (let buttonName in nodes.controls) {\n\n            controls.appendChild(nodes.controls[buttonName]);\n\n        }\n\n        editor.appendChild(controls);\n        nodes.canvasWrapper.appendChild(nodes.canvas);\n        editor.appendChild(nodes.canvasWrapper);\n\n        container.appendChild(editor);\n\n        instances.toolbar.create(editor, nodes.canvas, instances.canvas);\n\n        bindEvents();\n\n        return nodes;\n\n    }\n\n\n    return {\n        create\n    };\n\n}();\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui.js","/**\n * DOM utility\n */\nlet $ = require('./dom').default;\n\n/**\n * Canvas module\n */\nexport default class Canvas {\n\n    /**\n     * Initialisation of canvas module\n     * @param {Object} properties               - object with properties for canvas creating\n     * @param {String|Object} properties.shape  - type of format, can be 'horisontal', 'square' or 'vertical'\n     * @param {Number} properties.shape.width   - width of canvas\n     * @param {Number} properties.shape.height  - height of canvas\n     */\n    constructor( properties ) {\n\n        /**\n         * DOM of this class\n        */\n        this.tree = {\n            svg : null\n        };\n\n        /**\n         * CSS of this class\n        */\n        this.CSS = {\n            elements: {\n                text: 'cover-editor__canvas--text'\n            }\n        };\n\n        /**\n         * Sizes of the canvas\n        */\n        this.formats = {\n            vertical: {width: 510, height: 560},\n            horisontal: {width: 650, height: 370},\n            square: {width: 510, height: 510}\n        };\n\n        /**\n         * Positions of elements at the canvas\n        */\n        this.positions = {\n            mainText: {x: undefined, y: 271},\n            image: {x: undefined, y: 132},\n            headline: {x: undefined, y: 115}\n        };\n\n        /**\n         * Types of elements at the canvas\n        */\n        this.types = {\n            mainText: 'mainText',\n            image: 'image',\n            headline: 'headline'\n        };\n\n        /**\n         * Padding between the elements and canvas end\n        */\n        this.padding = 30;\n\n    }\n\n    /**\n     * Creates an SVG DOMElement\n     *\n     * @return {Element} - created SVG\n     */\n    create() {\n\n        this.tree.rectangle = $.svg('rect', {fill: '#FFFFFF'});\n        this.setSize(this.tree.rectangle, this.formats.horisontal);\n\n        this.tree.svg = $.svg('svg');\n        this.setCanvasFormat('horisontal');\n        this.tree.svg.appendChild(this.tree.rectangle);\n\n        return this.tree.svg;\n\n    }\n\n    /**\n     * Changing the sizes of canvas by using format\n     * @param {String} format - type of format, can be 'horisontal', 'square' or 'vertical'\n     */\n    setCanvasFormat( format ) {\n\n        this.setSize(this.tree.svg, this.formats[format]);\n        this.setSize(this.tree.rectangle, this.formats[format]);\n\n    }\n\n    /**\n     * Changes the sizes of svg element\n     *\n     * @param {Element} element    - element to change size\n     * @param {Object|String} size - sizes of canvas, if string, then 'auto'\n     * @param {Number} size.width  - width of canvas\n     * @param {Number} size.height - height of canvas\n     */\n    setSize( element, size ) {\n\n        if (size === 'auto' && (element.dataset.type === 'mainText' || element.dataset.type === 'headline')) {\n\n            let text = element.children[0];\n\n            element.setAttribute('width', this.tree.svg.clientWidth);\n            element.setAttribute('height', this.tree.svg.clientHeight);\n            size = {width: text.offsetWidth + 10, height: text.offsetHeight + 10};\n\n        }\n\n        size.height ? element.setAttribute('height', size.height) : null;\n        size.width ? element.setAttribute('width', size.width) : null;\n\n    }\n\n    /**\n     * Changes the color of svg element\n     *\n     * @param {Element} element - element to change size\n     * @param {String} color    - color of text to set\n     */\n    setColor(element, color) {\n\n        element.children[0].style.color = color;\n\n    }\n\n    /**\n     * Changes the font size of svg element\n     *\n     * @param {Element} element    - element to change size\n     * @param {Number} size        - size of text to set\n     */\n    setFontSize( element, size ) {\n\n        element.children[0].style.fontSize = size;\n        this.setSize(element, 'auto');\n        this.setPosition(element, {x: element.dataset.alignment, y: undefined});\n\n    }\n\n    /**\n     * Changes a position of element\n     *\n     * @param {Element}                - element to change position\n     * @param {Object|String} coords   - where to place text on canvas\n     * @param {Number} coords.x        - x coord\n     * @param {Number} coords.y        - y coord\n     */\n    setPosition( element, coords ) {\n\n        if (typeof coords === 'string') {\n\n            coords = this.positions[coords];\n\n        }\n\n        if (!coords) {\n\n            return;\n\n        }\n\n        let canvasSizes = {width: this.tree.svg.clientWidth, height: this.tree.svg.clientWidth},\n            elementSizes = {width: element.clientWidth + 5, height: element.clientWidth + 5},\n            isText = element.dataset.type === 'mainText' || element.dataset.type === 'headline';\n\n        if (coords.x === 'left') {\n\n            isText ? element.children[0].style.textAlign = coords.x : null;\n            coords.x = this.padding;\n\n        } else if (coords.x === 'center') {\n\n            isText ? element.children[0].style.textAlign = coords.x : null;\n            coords.x = (canvasSizes.width - elementSizes.width) / 2;\n\n        } else if (coords.x === 'right') {\n\n            isText ? element.children[0].style.textAlign = coords.x : null;\n            coords.x = canvasSizes.width - elementSizes.width - this.padding;\n\n        }\n\n        coords.y ? element.setAttribute('y', coords.y) : null;\n        coords.x ? element.setAttribute('x', coords.x) : null;\n\n    }\n\n    /**\n     * Creates an text element\n     *\n     * @param {Object|String} coords   - where to place text on canvas\n     * @param {Number} coords.x        - x coord\n     * @param {Number} coords.y        - y coord\n     * @return {Element}               - created text\n     */\n    createText( coords ) {\n\n        let text = $.make('div'),\n            container = $.svg('foreignObject'),\n            position = this.positions[coords];\n\n        text.classList.add(this.CSS.elements.text);\n        text.innerHTML = 'New text';\n        text.style.display = 'inline-flex';\n        text.setAttribute('contenteditable', true);\n        text.addEventListener('keyup', (event) => {\n\n            this.setSize(event.target.parentNode, 'auto');\n            this.setPosition(event.target.parentNode, {x: event.target.parentNode.dataset.alignment, y: undefined});\n\n        });\n        container.dataset.type = coords;\n        container.appendChild(text);\n        this.tree.svg.appendChild(container);\n\n        position.x = 'left';\n        this.setSize(container, 'auto');\n        this.setPosition(container, coords);\n\n        return container;\n\n    }\n\n    /**\n     * Sets text element\n     *\n     * @param {Element} coords - where to place inner text\n     * @param {String} text    - text to append\n     */\n    setInnerText( element, text ) {\n\n        if (element instanceof window.Element) {\n\n            element.textContent = text;\n\n        }\n\n    }\n\n    /**\n     * Creates an image element\n     *\n     * @param {Object|String} coords   - where to place image on canvas\n     * @param {Number} coords.x        - x coord\n     * @param {Number} coords.y        - y coord\n     * @return {Element}               - created image\n     */\n    createImage( coords ) {\n\n        let image = $.svg('image');\n\n        this.setPosition(image, coords);\n        this.setSize(image, {width: '87', height: '87'});\n        this.tree.svg.appendChild(image);\n\n        return image;\n\n    }\n\n    /**\n     * Creates elements from parameter\n     *\n     * @param {String} - type of elements: 'mainText', 'headline', 'image'\n     */\n    createElement( element ) {\n\n        if (element === 'mainText' || element === 'headline') {\n\n            return this.createText(element);\n\n        } else if (element === 'image') {\n\n            return this.createImage(element);\n\n        }\n\n    }\n\n    /**\n     * Export canvas as SVG file\n     */\n    import() {\n\n        let serializer = new window.XMLSerializer(),\n            source = serializer.serializeToString(this.tree.svg);\n\n        if(!source.match(/^<svg[^>]+xmlns=\"http\\:\\/\\/www\\.w3\\.org\\/2000\\/svg\"/)) {\n\n            source = source.replace(/^<svg/, '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n\n        }\n        if(!source.match(/^<svg[^>]+\"http\\:\\/\\/www\\.w3\\.org\\/1999\\/xlink\"/)) {\n\n            source = source.replace(/^<svg/, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\"');\n\n        }\n\n        source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n\n        let link = document.createElement('a');\n\n        link.setAttribute('href', 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(source));\n        link.setAttribute('download', 'cover.svg');\n\n        link.style.display = 'none';\n        document.body.appendChild(link);\n\n        link.click();\n        document.body.removeChild(link);\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/canvas.js","/**\n * DOM utility\n */\nlet $ = require('./dom').default;\n\n/**\n *   Creates a toolbar\n *   @class Toolbar\n *\n *\n *  @property {Object} this.tree — toolbar nodes\n *  @property {Object} this.CSS  — styles dictionary\n *  @property {Element} this.editor  — main editor wrapper\n *  @property {Element} this.canvas  — main canvas SVG\n\n *  @property {Element} this.target  — on which element toolbar was open\n */\n\n\nexport default class Toolbar {\n\n    /**\n     * @constructor\n     *\n     * Toolbar module\n     */\n    constructor() {\n\n        /**\n         * Components which are controlling something.\n         * @type {Object}\n         */\n        this.instances = {\n            canvas: null\n        };\n\n        /**\n         * On which element toolbar was open\n         * @type {Element|null}\n         */\n        this.target = null;\n        this.properties = {\n            fontSize: {\n                small: '25px',\n                medium: '28px',\n                big: '31px'\n            }\n        };\n\n        /**\n         * DOM Elements\n         * @type {Object}\n         */\n        this.tree = {\n            toolbar: undefined,\n            buttons: {\n                fontSize: undefined,\n                left: undefined,\n                center: undefined,\n                right: undefined,\n                color: undefined\n            },\n            colorForm: undefined,\n        };\n\n        /**\n         * CSS classnames\n         * @type {Object}\n         */\n        this.CSS = {\n            hidden: 'cover-editor__hidden',\n            toolbar: {\n                colorMode: 'cover-editor__toolbar--color_mode',\n                normal: 'cover-editor__toolbar'\n            },\n            target: {\n                active: 'cover-editor__text--active',\n                fontSize: [\n                    'cover-editor__text--small',\n                    'cover-editor__text--medium',\n                    'cover-editor__text--big'\n                ],\n            },\n            button : 'cover-editor__toolbar-button',\n            buttons: {\n                active    : 'cover-editor__toolbar-button--active',\n                left      : 'cover-editor__toolbar-button--left',\n                center    : 'cover-editor__toolbar-button--center',\n                right     : 'cover-editor__toolbar-button--right',\n                fontSize  : 'cover-editor__toolbar-button--font-size',\n                fontSizes  : {\n                    small: 'cover-editor__toolbar-button--small',\n                    medium: 'cover-editor__toolbar-button--medium',\n                    big: 'cover-editor__toolbar-button--big'\n                },\n                color : 'cover-editor__toolbar-button--color'\n            },\n            colorForm : 'cover-editor__toolbar-color-form'\n        };\n\n    }\n\n    /**\n     *  Prepares toolbar elements\n     *\n     * @param  {object} params\n     * @param  {Element} editor         - main wrapper\n     * @param  {Element} canvasInstance - canvas object\n     */\n    create(editor, canvas, canvasInstance) {\n\n        /**\n         * Main Editor wrapper\n         * @type {Element}\n         */\n        this.editor = editor;\n        this.canvas = canvas;\n        this.instances.canvas = canvasInstance;\n\n        this.make();\n\n    }\n\n\n    /**\n     * Creates toolbar\n     */\n    make() {\n\n        this.tree.toolbar = $.make('div', [this.CSS.toolbar.normal, this.CSS.hidden]);\n\n        /**\n         * Add buttons\n         */\n        ['fontSize', 'left', 'center', 'right', 'color'].forEach( type => {\n\n            let button = $.make('span', [this.CSS.button, this.CSS.buttons[type]]);\n\n            this.tree.toolbar.appendChild(button);\n            this.tree.buttons[type] = button;\n\n            /**\n             * Save action in the button's dataset\n             */\n            button.dataset.action = type;\n\n            button.addEventListener('click', event => {\n\n                this.buttonClicked(event);\n\n            });\n\n        });\n\n        /**\n         * Add color form\n         */\n        this.tree.colorForm = $.make('input', [ this.CSS.colorForm ]);\n        this.tree.toolbar.insertBefore(this.tree.colorForm, this.tree.buttons.color);\n\n        /**\n         * Append toolbar to the Editor\n         */\n        this.editor.appendChild(this.tree.toolbar);\n\n    }\n\n    /**\n     * Toolbar button click handler\n     * @param  {MouseEvent} event  - click on the button\n     */\n    buttonClicked(event) {\n\n        let buttonClicked = event.target,\n            action = event.target.dataset.action;\n\n        switch ( action ) {\n\n            case 'fontSize':\n                this.changeFontSize();\n                break;\n\n            case 'left':\n            case 'center':\n            case 'right':\n                this.changeAlignment(action);\n                break;\n\n            case 'color':\n                this.changeColorMode();\n                break;\n\n        }\n\n    }\n\n    /**\n     * Changes font size of target\n     * @param {Integer} fontSize - number of font size\n     */\n    changeFontSize( fontSize ) {\n\n        let current = this.target.dataset.fontSize;\n\n        if (current == 'small') {\n\n            current = 'medium';\n\n        } else if (current == 'medium') {\n\n            current = 'big';\n\n        } else if (current == 'big') {\n\n            current = 'small';\n\n        } else {\n\n            return;\n\n        }\n\n        this.target.dataset.fontSize = current;\n        this.instances.canvas.setFontSize(this.target, this.properties.fontSize[current]);\n        this.moveToTarget();\n\n    }\n\n    /**\n     * Opens toolbar near element\n     * @param {String} alignment - alignment of target: 'left', 'center' or 'right'\n     */\n    changeAlignment( alignment ) {\n\n        this.target.dataset.alignment = alignment;\n\n        ['left', 'center', 'right'].forEach( type => {\n\n            this.tree.buttons[type].classList.remove(this.CSS.buttons.active);\n\n        });\n\n        this.instances.canvas.setPosition(this.target, {x: alignment, y: undefined});\n        this.moveToTarget();\n\n    }\n\n    /**\n     * Changes color of target and toolbar color button\n     * @param {String} color - color of target\n     */\n    changeColor( color ) {\n\n        this.instances.canvas.setColor(this.target, color);\n        this.target.dataset.color = color;\n        this.tree.buttons.color.style.background = color;\n\n    }\n\n    /**\n     * Toggles color mode of toolbar\n     */\n    changeColorMode() {\n\n        if (this.tree.toolbar.classList.contains(this.CSS.toolbar.colorMode)) {\n\n            this.changeColor(this.tree.colorForm.value);\n            this.tree.toolbar.classList.remove(this.CSS.toolbar.colorMode);\n\n        } else {\n\n            this.tree.toolbar.classList.add(this.CSS.toolbar.colorMode);\n\n        }\n\n        this.moveToTarget();\n\n    }\n\n    /**\n     * Moves toolbar to target\n     */\n    moveToTarget() {\n\n        let toolbar = this.tree.toolbar,\n            canvasWrapper = {left: this.canvas.parentNode.offsetLeft, top: this.canvas.parentNode.offsetTop},\n            element = {left: window.Number(this.target.getAttribute('x')), top: window.Number(this.target.getAttribute('y')), width: this.target.clientWidth};\n\n        if (this.target.dataset.alignment === 'left') {\n\n            toolbar.style.left = canvasWrapper.left + element.left + 'px';\n\n        } else if (this.target.dataset.alignment === 'center') {\n\n            toolbar.style.left = canvasWrapper.left + element.left + (element.width - toolbar.clientWidth) / 2 + 'px';\n\n        } else if (this.target.dataset.alignment === 'right') {\n\n            toolbar.style.left = canvasWrapper.left + element.left + element.width - toolbar.clientWidth + 'px';\n\n        }\n\n        toolbar.style.top = canvasWrapper.top + element.top - toolbar.clientHeight + 'px';\n\n    }\n\n    /**\n     * Reads states of buttons from target\n     */\n    getTargetParams() {\n\n        if (this.target.dataset.fontSize) {\n\n            this.target.dataset.fontSize = 'small';\n            this.changeFontSize(this.target.dataset.fontSize);\n\n        }\n\n        if (this.target.dataset.alignment == undefined) {\n\n            this.target.dataset.alignment = 'left';\n            this.changeAlignment(this.target.dataset.alignment);\n\n        }\n\n        if (this.target.dataset.color == undefined) {\n\n            this.target.dataset.color = '#000000';\n            this.changeColor(this.target.dataset.color);\n\n        }\n\n    }\n\n    /**\n     * Opens toolbar near element\n     *\n     * @param {Object} opitons\n     * @param {Element} options.target - element to show toolbar\n     */\n    openNear({ target }) {\n\n        this.target = target;\n        this.tree.toolbar.classList.remove(this.CSS.hidden);\n        this.moveToTarget();\n        this.getTargetParams();\n\n    }\n\n    /**\n     * Clears buttons states in toolbar\n     */\n    removeTargetParams() {\n\n        this.tree.buttons.left.classList.remove(this.CSS.buttons.active);\n        this.tree.buttons.center.classList.remove(this.CSS.buttons.active);\n        this.tree.buttons.right.classList.remove(this.CSS.buttons.active);\n\n    }\n\n    /**\n     * Hides a toolbar\n     */\n    hide() {\n\n        this.removeTargetParams();\n        this.target = null;\n        this.tree.toolbar.classList.add(this.CSS.hidden);\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/toolbar.js"],"sourceRoot":""}