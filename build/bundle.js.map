{"version":3,"sources":["webpack:///webpack/bootstrap e2339a053281afc5ced7","webpack:///./src/dom.js","webpack:///./src/main.js","webpack:///./src/styles/main.css","webpack:///./src/ui.js","webpack:///./src/toolbar.js"],"names":["Dom","tagName","classNames","attributes","el","document","createElement","Array","isArray","classList","add","attrName","tag","param","n","createElementNS","p","setAttributeNS","module","exports","require","ui","Toolbar","default","toolbarInstance","init","initParams","console","assert","containerId","container","getElementById","warn","nodes","create","prepare","editor","canvas","log","destroy","toolbar","$","CSS","controls","resizeButton","resizeButtonActive","resizeButtonSquare","resizeButtonVertical","resizeButtonHorisontal","controlButton","controlButtonSave","canvasWrapper","mainRectangle","resizeSqure","resizeVertical","resizeHorisontal","saveButton","pictureButton","mainTextButton","headlineButton","createCanvas","make","svg","width","height","fill","appendChild","saveButtonClicked","resizeButtonClicked","event","button","target","size","dataset","toggleObjectClicked","object","codex","cover","openNear","bindEvents","addEventListener","textContent","buttonName","tree","undefined","buttons","fontSize","left","center","right","color","colorForm","hidden","colorMode","normal","controllable","active","fontSizes","small","medium","big","params","forEach","type","action","buttonClicked","changeFontSize","changeAlignment","openColorForm","alignment"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e2339a053281afc5ced7","/**\n * DOM elements manipulations\n */\nexport default class Dom {\n\n    /**\n    * Helper for making Elements with classname and attributes\n    * @param  {string} tagName           - new Element tag name\n    * @param  {array|string} classNames  - list or name of CSS classname(s)\n    * @param  {Object} attributes        - any attributes\n    * @return {Element}\n    */\n    static make(tagName, classNames, attributes) {\n\n        var el = document.createElement(tagName);\n\n        if ( Array.isArray(classNames) ) {\n\n            el.classList.add(...classNames);\n\n        } else if( classNames ) {\n\n            el.classList.add(classNames);\n\n        }\n\n        for (let attrName in attributes) {\n\n            el[attrName] = attributes[attrName];\n\n        }\n        return el;\n\n    }\n\n\n    /**\n    * Creates SVG element\n    *\n    * @param {string} tag - element tag name\n    * @param {object} param - parametrs\n    *\n    * @returns {Element} new created svg tag\n    */\n    static svg(tag, param) {\n\n        var n = document.createElementNS('http://www.w3.org/2000/svg', tag);\n\n        for (var p in param) {\n\n            n.setAttributeNS(null, p, param[p]);\n\n        }\n\n        return n;\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/dom.js","/**\n * Cover module entry poit\n */\nmodule.exports = function () {\n\n    'use strict';\n\n    /**\n     * Requre CSS\n     */\n    require('./styles/main.css');\n\n    /**\n     * User Interface module\n     */\n    let ui = require('./ui');\n\n    /**\n     * Canvas module\n     * @type {Canvas}\n     */\n    // let Canvas = require('./canvas').default;\n\n    /**\n     * Toolbar module\n     */\n    let Toolbar = require('./toolbar').default;\n\n    let toolbarInstance = new Toolbar();\n\n\n\n    /**\n     * Initialization method\n     * @param  {object} initParams\n     * @param  {string} initParams.containerId - in that Node we will render Editor\n     */\n    let init = function (initParams = {}) {\n\n        console.assert(initParams.containerId, 'Container id is missed');\n\n        let container = document.getElementById(initParams.containerId);\n\n        if (!container) {\n\n            console.warn('Container was not found by id %o', initParams.containerId);\n            return;\n\n        }\n\n        /**\n         * Make interface and bind events\n         */\n        let nodes = ui.create(container);\n\n        // let canvas = new Canvas({\n        //     canvas: nodes.canvas\n        // });\n        //\n        //\n\n        toolbarInstance.prepare({\n            editor: nodes.editor,\n            canvas: nodes.canvas\n        });\n\n        console.log('toolbarInstance: %o', toolbarInstance);\n\n    };\n\n    /**\n     * Destories UI\n     */\n    let destroy = function () {\n\n    };\n\n    return {\n        init,\n        destroy,\n        toolbar: toolbarInstance\n    };\n\n}();\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/main.css\n// module id = 2\n// module chunks = 0","/**\n * User interface module\n */\nmodule.exports = function () {\n\n    'use strict';\n\n    let $ = require('./dom').default;\n\n    /**\n     * Style classnames\n     * @type {Object}\n     */\n    const CSS = {\n        editor                 : 'cover-editor',\n        controls               : 'cover-editor__controls',\n\n        resizeButton           : 'cover-editor__resize-canvas',\n        resizeButtonActive     : 'cover-editor__resize-canvas--active',\n\n        resizeButtonSquare     : 'cover-editor__resize-canvas--square',\n        resizeButtonVertical   : 'cover-editor__resize-canvas--vertical',\n        resizeButtonHorisontal : 'cover-editor__resize-canvas--horisontal',\n\n        controlButton          : 'cover-editor__control-button',\n        controlButtonSave      : 'cover-editor__control-button--save',\n\n        canvasWrapper          : 'cover-editor__canvas-wrapper',\n        canvas                 : 'cover-editor__canvas'\n    };\n\n    /**\n     * Static nodes cache\n     * @type {Object}\n     */\n    let nodes = {\n        editor: null,\n        canvasWrapper    : null,\n        canvas           : null,\n        mainRectangle    : null,\n        controls : {\n            resizeSqure      : null,\n            resizeVertical   : null,\n            resizeHorisontal : null,\n            saveButton       : null,\n            pictureButton    : null,\n            mainTextButton   : null,\n            headlineButton   : null,\n        }\n    };\n\n    /**\n    * Creates main form\n    */\n    function createCanvas() {\n\n        nodes.canvasWrapper = $.make('div', CSS.canvasWrapper);\n\n        nodes.canvas = $.svg('svg', {\n            width: '100%',\n            height: '100%'\n        });\n\n        nodes.mainRectangle = $.svg('rect', {\n            width: '100%',\n            height: '100%',\n            fill: '#FFFFFF'\n        });\n\n        nodes.canvas.classList.add(CSS.canvas);\n        nodes.canvas.appendChild(nodes.mainRectangle);\n        nodes.canvasWrapper.appendChild(nodes.canvas);\n\n        return nodes.canvasWrapper;\n\n    }\n\n    /**\n     * Save button click listener\n     */\n    function saveButtonClicked() {\n\n        console.log('saveButtonClicked');\n\n    }\n\n    /**\n     * Resize button click listener\n     * @param {MouseEvent} event — click\n     */\n    function resizeButtonClicked(event) {\n\n        let button = event.target,\n            size = button.dataset.size;\n\n        console.log('resize to: %o', size);\n\n\n    }\n\n    /**\n     * Show and hide button click listener\n     * @param  {MouseEvent} event  - click\n     */\n    function toggleObjectClicked(event) {\n\n        let button = event.target,\n            object = button.dataset.object;\n\n        console.log('toggle: %o', object);\n\n        /**\n         * Test\n         *\n         * Open toolbar near button\n         */\n        codex.cover.toolbar.openNear({\n            target : button\n        });\n\n    }\n\n    /**\n     * Bind necessary event to manupulate controls\n     */\n    function bindEvents() {\n\n        nodes.controls.saveButton.addEventListener('click', saveButtonClicked);\n\n        nodes.controls.resizeSqure.addEventListener('click', resizeButtonClicked);\n        nodes.controls.resizeVertical.addEventListener('click', resizeButtonClicked);\n        nodes.controls.resizeHorisontal.addEventListener('click', resizeButtonClicked);\n\n        nodes.controls.pictureButton.addEventListener('click', toggleObjectClicked);\n        nodes.controls.mainTextButton.addEventListener('click', toggleObjectClicked);\n        nodes.controls.headlineButton.addEventListener('click', toggleObjectClicked);\n\n    }\n\n    /**\n    * Create cover-editor\n    * @param {object} settings - array of paramertres\n    * @param {Element} settings.container - element to create cover-editor\n    */\n    function create(container) {\n\n        nodes.editor = $.make('div', CSS.editor);\n\n        let controls = $.make('div', CSS.controls),\n            canvas   = createCanvas();\n\n        nodes.controls.resizeSqure      = $.make('span', [CSS.resizeButton, CSS.resizeButtonSquare]);\n        nodes.controls.resizeVertical   = $.make('span', [CSS.resizeButton, CSS.resizeButtonVertical]);\n        nodes.controls.resizeHorisontal = $.make('span', [CSS.resizeButton, CSS.resizeButtonHorisontal]);\n        nodes.controls.saveButton       = $.make('span', [CSS.controlButton, CSS.controlButtonSave]);\n        nodes.controls.pictureButton    = $.make('span', CSS.controlButton, { textContent: 'Image' });\n        nodes.controls.mainTextButton   = $.make('span', CSS.controlButton, { textContent: 'Main Text' });\n        nodes.controls.headlineButton   = $.make('span', CSS.controlButton, { textContent: 'Headline' });\n\n        /**\n         * Save size in button's data-size\n         */\n        nodes.controls.resizeSqure.dataset.size = 'square';\n        nodes.controls.resizeVertical.dataset.size = 'vertical';\n        nodes.controls.resizeHorisontal.dataset.size = 'horisontal';\n\n\n        /**\n         * Save create element type in button's data-object\n         */\n        nodes.controls.mainTextButton.dataset.object = 'mainText';\n        nodes.controls.headlineButton.dataset.object = 'headline';\n        nodes.controls.pictureButton.dataset.object = 'picture';\n\n        for (let buttonName in nodes.controls) {\n\n            controls.appendChild(nodes.controls[buttonName]);\n\n        }\n\n        nodes.editor.appendChild(controls);\n        nodes.editor.appendChild(canvas);\n\n        container.appendChild(nodes.editor);\n\n\n        bindEvents();\n\n        return nodes;\n\n    }\n\n\n    return {\n        create\n    };\n\n}();\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui.js","/**\n * DOM utility\n */\nlet $ = require('./dom').default;\n\n/**\n *   Creates a toolbar\n *   @class Toolbar\n *\n *\n *  @property {Object} this.tree — toolbar nodes\n *  @property {Object} this.CSS  — styles dictionary\n *  @property {Element} this.editor  — main editor wrapper\n *  @property {Element} this.canvas  — main canvas SVG\n\n *  @property {Element} this.target  — on which element toolbar was open\n *\n *   @param {Element} elem                             - element on a canvas which properties will be changed by toolbar\n *   @param {Canvas} canvas                            - object of canvas where controllable element is located\n *   @param {Object} properties                        - object containing additional properties for toolbar\n *   @param {number} properties.padding                - size of padding between toolbar and controllable element\n *   @param {number} properties.elementAlignPadding    - size of padding between the border of canvas and controllable element in %\n *   @return {Toolbar}\n */\nexport default class Toolbar {\n\n    /**\n     * @constructor\n     *\n     * Toolbar module\n     */\n    constructor() {\n\n        /**\n         * On which element toolbar was open\n         * @type {Element|null}\n         */\n        this.target = null;\n\n        /**\n         * DOM Elements\n         * @type {Object}\n         */\n        this.tree = {\n            toolbar: undefined,\n            buttons: {\n                fontSize: undefined,\n                left: undefined,\n                center: undefined,\n                right: undefined,\n                color: undefined\n            },\n            colorForm: undefined,\n        };\n\n        /**\n         * CSS classnames\n         * @type {Object}\n         */\n        this.CSS = {\n            hidden: 'cover-editor__hidden',\n            toolbar: {\n                colorMode: 'cover-editor__toolbar--color_mode',\n                normal: 'cover-editor__toolbar'\n            },\n            controllable: {\n                active: 'cover-editor__text--active',\n                fontSize: [\n                    'cover-editor__text--small',\n                    'cover-editor__text--medium',\n                    'cover-editor__text--big'\n                ],\n            },\n            button : 'cover-editor__toolbar-button',\n            buttons: {\n                active    : 'cover-editor__toolbar-button--active',\n                left      : 'cover-editor__toolbar-button--left',\n                center    : 'cover-editor__toolbar-button--center',\n                right     : 'cover-editor__toolbar-button--right',\n                fontSize  : 'cover-editor__toolbar-button--font-size',\n                fontSizes  : {\n                    small: 'cover-editor__toolbar-button--small',\n                    medium: 'cover-editor__toolbar-button--medium',\n                    big: 'cover-editor__toolbar-button--big'\n                },\n                color : 'cover-editor__toolbar-button--color'\n            },\n            colorForm : 'cover-editor__toolbar-color-form'\n        };\n\n    }\n\n    /**\n     *  Prepares toolbar elements\n     *\n     * @param  {object} params\n     * @param  {Element} params.editor - main wrapper\n     * @param  {Element} params.cancas - main svg canvas\n     */\n    prepare(params) {\n\n        /**\n         * Main Editor wrapper\n         * @type {Element}\n         */\n        this.editor = params.editor;\n\n        this.make();\n\n    }\n\n\n    /**\n     * Creates toolbar\n     */\n    make() {\n\n        // tree.controllable = elem;\n        // tree.controllable.classList.add(styles.controllable.fontSize[0]);\n        // tree.controllable.addEventListener('dblclick', showToolbar.bind(this));\n\n        this.tree.toolbar = $.make('div', [ this.CSS.toolbar.normal ]);\n\n        /**\n         * Add buttons\n         */\n        ['fontSize', 'left', 'center', 'right', 'color'].forEach( type => {\n\n            let button = $.make('span', [this.CSS.button, this.CSS.buttons[type]]);\n\n            this.tree.toolbar.appendChild(button);\n            this.tree.buttons[type] = button;\n\n            /**\n             * Save action in the button's dataset\n             */\n            button.dataset.action = type;\n\n            button.addEventListener('click', event => {\n\n                this.buttonClicked(event);\n\n            });\n\n        });\n\n        /**\n         * @todo  Add color form\n         */\n\n\n        /**\n         * Append toolbar to the Editor\n         */\n        this.editor.appendChild(this.tree.toolbar);\n\n    }\n\n    /**\n     * Toolbar button click handler\n     * @param  {MouseEvent} event  - click on the button\n     */\n    buttonClicked(event) {\n\n        let buttonClicked = event.target,\n            action = buttonClicked.dataset.action;\n\n        console.log('clicked: %o', action);\n\n        switch ( action ) {\n\n            case 'fontSize':\n                this.changeFontSize();\n                break;\n\n            case 'left':\n            case 'center':\n            case 'right':\n                this.changeAlignment(action);\n                break;\n\n            case 'color':\n                this.openColorForm();\n\n        }\n\n    }\n\n    changeFontSize() {\n\n        console.log('changeFontSize: %o');\n\n    }\n\n    changeAlignment( alignment ) {\n\n        console.log('alignment: %o', alignment);\n\n    }\n\n    openColorForm() {\n\n        console.log('openColorForm: %o');\n\n    }\n\n    /**\n     * Opens toolbar near element\n     *\n     * @param {Object} opitons\n     * @param {Element} options.target - element to show toolbar\n     */\n    openNear({ target }) {\n\n        this.target = target;\n\n        /**\n         * @todo  Move toolbar to the target\n         */\n\n        /**\n         * @todo  Open toolbar\n         */\n\n        console.log('now we need to open toolbar near: %o', this.target);\n\n    }\n\n    hide() {\n\n        this.target = null;\n\n    }\n\n    /**\n    *   Moving toolbar to the controllable element\n    *   @private\n    *   @param {void}\n    *   @return {void}\n    */\n    // changeToolbarPosition() {\n\n    //     var canvasCoords = canvas.svg.getBoundingClientRect(),\n    //         controllableCoords = tree.controllable.getBoundingClientRect();\n\n    //     tree.toolbar.style.left = controllableCoords.left - canvasCoords.left + (tree.controllable.clientWidth - tree.toolbar.clientWidth)/2 + 'px';\n    //     tree.toolbar.style.top = controllableCoords.top - canvasCoords.top - tree.controllable.clientHeight - properties.padding + 'px';\n\n    // }\n\n    /**\n    *   Showing toolbar after clicking on controllable element\n    *   @private\n    *   @param {void}\n    *   @return {void}\n    */\n    // showToolbar() {\n\n    //     if (tree.toolbar.classList.contains(styles.hidden)) {\n\n    //         if (window.getSelection) {\n\n    //             window.getSelection().removeAllRanges();\n\n    //         } else {\n\n    //             document.selection.empty();\n\n    //         }\n    //         tree.toolbar.classList.remove(styles.hidden);\n\n    //     }\n    //     tree.controllable.classList.add(styles.controllable.active);\n    //     changeToolbarPosition();\n\n    // }\n\n    /**\n    *   Hiding toolbar after controllable element has been unfocused\n    *   @private\n    *   @param {Event} event - event of clicking on body\n    *   @return {void}\n    */\n    // hideToolbar(event) {\n\n    //     if (event.target !== tree.controllable && event.target.parentNode !== tree.toolbar && event.target !== tree.toolbar) {\n\n    //         tree.controllable.classList.remove(styles.controllable.active);\n    //         tree.toolbar.classList.add(styles.hidden);\n\n    //     }\n\n    // }\n\n    /**\n    *   Chenging color of color button in toolbar after valid CSS color string has been written in colorForm element\n    *   @private\n    *   @param {Event} event - event of keyup in colorForm field in toolbar\n    *   @return {void}\n    */\n    // changeToolbarColorButtonColor(event) {\n\n    //     tree.buttons.color.style.backgroundColor = event.target.value;\n\n    // }\n\n    /**\n    *   Unhiding or hiding color input field in toolbar\n    *   @private\n    *   @param {Event} event - event of click  on color button in toolbar\n    *   @return {void}\n    */\n    // toggleToolbarColorMode() {\n\n    //     if (tree.toolbar.contains(styles.toolbar.colorMode)) {\n\n    //         tree.toolbar.classList.add(styles.toolbar.colorMode);\n\n    //     } else {\n\n    //         tree.toolbar.classList.add(styles.toolbar.colorMode);\n    //         canvas.setTextColor(tree.controllable, window.getComputedStyle(tree.controllable).color);\n\n    //     }\n\n    // }\n\n    /**\n    *   Changes a font size of controllable element after clicking on fontSize button\n    *   @private\n    *   @param {Event} event - event of click on fontSize button\n    *   @return {void}\n    */\n    // changeControllableFontSize(event) {\n\n    //     event.target.classList.remove(styles.buttons.fontSize[event.target.dataset.fontSize]);\n    //     tree.controllable.classList.remove(styles.controllable.fontSize[event.target.dataset.fontSize]);\n    //     event.target.dataset.fontSize += 1;\n    //     event.target.dataset.fontSize %= styles.buttons.fontSize.length;\n    //     event.target.classList.add(styles.buttons.fontSize[event.target.dataset.fontSize]);\n    //     tree.controllable.classList.add(styles.controllable.fontSize[event.target.dataset.fontSize]);\n\n    //     changeToolbarPosition();\n\n    // }\n\n    /**\n    *   Changes position of controllable element after clicking on left/center/right button\n    *   @private\n    *   @param {Event} event - event of click on left/center/right button\n    *   @return {void}\n    */\n    // changeControllableAlign(event) {\n\n    //     tree.buttons.left.classList.remove(styles.buttons.active);\n    //     tree.buttons.center.classList.remove(styles.buttons.active);\n    //     tree.buttons.right.classList.remove(styles.buttons.active);\n    //     event.target.classList.add(styles.buttons.active);\n\n    //     var canvasShape = {'width': canvas.clientWidth, 'height': canvas.clientHeight},\n    //         controllableShape = {'width': tree.controllable.clientWidth, 'height': tree.controllable.clientHeight};\n\n    //     if (event.target.classList.contains(styles.buttons.left)) {\n\n    //         canvas.setTextPosition(tree.controllable, canvasShape.width/properties.elementAlignPadding, tree.controllable.getAttribute('y'));\n\n    //     } else if (event.target.classList.contains(styles.buttons.center)) {\n\n    //         canvas.setTextPosition(tree.controllable, (canvasShape.width - tree.controllableShape.width)/2, tree.controllable.getAttribute('y'));\n\n    //     } else if (event.target.classList.contains(styles.buttons.right)) {\n\n    //         canvas.setTextPosition(tree.controllable, canvasShape.width - controllableShape.width - canvasShape.width/properties.elementAlignPadding, tree.controllable.getAttribute('y'));\n\n    //     }\n    //     changeToolbarPosition();\n\n    // }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/toolbar.js"],"sourceRoot":""}